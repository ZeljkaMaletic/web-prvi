@page "/osobe"
@using BlazorAppPovezivanje.Models;
@inject HttpClient httpClient;
@inject NavigationManager navManager


<h3>ListaOsoba</h3>

<input type="text" @bind-value="search" placeholder="Pretraži"/>



<button @onclick="Trazi">Pretraži</button>

<button @onclick="Dodaj">Dodaj Osobu</button>

<button @onclick="Lista">Vrati listu</button>

<ul>
    
    @foreach (var item in osobe)
    {
        <li>
            @item.Id @item.Ime @item.Prezime
        <button @onclick="()=>Detalji(item.Id)" >Detalji </button>
            <button @onclick="()=>Uredi(item.Id)">Uredi Osobu</button>
            <button @onclick="()=>Delete(item.Id)">Obriši</button>
        
        </li>

    }

</ul>

@code {
    public List<Osoba> osobe = new List<Osoba>();
    public string search = "";


    protected override async Task OnInitializedAsync() 

    {
        osobe=await DohvatiListuAsync();

    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }

    

    public async Task<List<Osoba>>DohvatiListuAsync()
    {
        List<Osoba> osobeSaServera = new List<Osoba>();
        var result = await httpClient.GetAsync("https://expertvjezbeapi.azurewebsites.net/api/Osobes");

        if (result.IsSuccessStatusCode)
        {
            osobeSaServera = await result.Content.ReadFromJsonAsync<List<Osoba>>();

            osobeSaServera = osobeSaServera.OrderByDescending(x => x.Id).ToList();
        }
        return osobeSaServera;
    }
 

    

    public async Task Lista()

    {
        osobe=await DohvatiListuAsync();

    }

    public async Task Trazi()
    {
        osobe = osobe.Where(x => x.Ime.ToLower().Contains(search.ToLower()) || x.Prezime.ToLower().Contains(search.ToLower())).ToList();



    }
        


    protected void Detalji (int idOsobe)
    {

        navManager.NavigateTo($"detalji/{idOsobe}");
    }

    protected void Uredi(int idOsobe)
    {

        navManager.NavigateTo($"edit/{idOsobe}");
    }

    protected void Dodaj()
    {

        navManager.NavigateTo($"dodaj");
    }


    protected void Delete(int idOsobe)
    {

        navManager.NavigateTo($"delete/{idOsobe}");
    }

}
